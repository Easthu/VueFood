{"remainingRequest":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\三阶段代码\\Vue\\food\\VueFood\\src\\components\\CommunityList\\index.vue?vue&type=style&index=0&id=8c2c042c&lang=less&scoped=true&","dependencies":[{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\src\\components\\CommunityList\\index.vue","mtime":1583916893986},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\less-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoNCiN0ZXN0IHsNCiAgaGVpZ2h0OiAxMDB2aDsNCg0KICAucHVsbERvd24gew0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBsZWZ0OiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCg0KICAgIHAgew0KICAgICAgZm9udC1zaXplOiAxNHB4Ow0KICAgICAgcGFkZGluZzogMjBweCAwOw0KICAgICAgd2lkdGg6IDEwMCU7DQogICAgfQ0KICB9DQoNCiAgLm1vdmVVcEFuaW1hdGUgew0KICAgIHRyYW5zaXRpb246IDIwMG1zIGVhc2UgYWxsOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogMjAwbXMgZWFzZSBhbGw7DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/CommunityList","sourcesContent":["<template>\r\n  <div class=\"pullDown\" :style=\"{top:moveTop}\" :class=\"ifUp?'moveUpAnimate':''\">\r\n    <p>{{ifReload}}</p>\r\n    <vueWaterfallEasy\r\n    :imgsArr=\"imgsArr\"\r\n    :enablePullDownEvent=\"openPullDown\"\r\n    :style=\"{transform: contentMove}\"\r\n    :class=\"ifUp?'moveUpAnimate':''\"\r\n    @scrollReachBottom=\"fetchImgsData\"\r\n    @pullDownEnd=\"endMove\"\r\n    @touchmove.native=\"pullDown($event)\"\r\n    @touchstart.native=\"pullDownStart($event)\"\r\n    ref=\"downRefresh\"\r\n  ></vueWaterfallEasy>\r\n  </div>\r\n  \r\n</template>\r\n<style lang=\"less\" scoped>\r\n#test {\r\n  height: 100vh;\r\n\r\n  .pullDown {\r\n    position: absolute;\r\n    left: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n\r\n    p {\r\n      font-size: 14px;\r\n      padding: 20px 0;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  .moveUpAnimate {\r\n    transition: 200ms ease all;\r\n    -webkit-transition: 200ms ease all;\r\n  }\r\n}\r\n</style>\r\n<script>\r\nimport vueWaterfallEasy from \"vue-waterfall-easy\";\r\nexport default {\r\n  components: {\r\n    vueWaterfallEasy\r\n  },\r\n  data() {\r\n    return {\r\n      moveTime: 0, // 记录滚动事件触发次数\r\n      pullStart: 0, // 首次移动的初始Y轴位置\r\n      pullMove: 0, // 移动后当前点Y轴位置\r\n      pullDistance: 0, // 计算得到Y轴移动距离\r\n      ifUp: false, // 是否需要回弹动画\r\n      moveTop: -50 + \"px\", // 下拉刷新移动距离\r\n      ifReload: \"下拉刷新\", // 下拉刷新字样\r\n      contentMove: \"translate3d(0px, '+ 0 +'px, 0px)\", // 内容移动距离\r\n      openPullDown: true, // 开启下拉刷新\r\n      imgsArr: [], //存放所有已加载图片的数组（即当前页面会加载的所有图片）\r\n      fetchImgsArr: [] //存放每次滚动时下一批要加载的图片的数组\r\n    };\r\n  },\r\n  methods: {\r\n    // 开始滚动\r\n    pullDown(e) {\r\n      // 监听该组件的滚动\r\n      let scrollTop = document.getElementsByClassName(\r\n        \"vue-waterfall-easy-scroll\"\r\n      )[0].scrollTop;\r\n      this.moveTime++;\r\n      // 当滚动到顶部的时候触发\r\n      if (scrollTop == 0) {\r\n        if (this.moveTime == 1) {\r\n          if (this.moveTime % 2 == 1) {\r\n            // 记录下初始点的Y轴位置\r\n            this.pullStart = e.touches[0].pageY;\r\n          }\r\n        }\r\n        // 记录下移动后点的Y轴位置 和 Y轴移动距离\r\n        this.pullMove = e.touches[0].pageY;\r\n        this.pullDistance = this.pullMove - this.pullStart;\r\n\r\n        // 如果计算出距离为负数则规定移动位置为0 重新确定初始点位置\r\n        if (this.pullDistance < 0) {\r\n          this.moveTime = 0;\r\n        } else {\r\n          // 可以理解为移动速度，防止手指移动到屏幕底端,下拉刷新跟到底端的情况发生\r\n          let moveSpeed = this.pullDistance / 2;\r\n          this.ifUp = false;\r\n          this.ifReload = \"下拉刷新\";\r\n          this.contentMove = \"translate3d(0px, \" + moveSpeed + \"px, 0px)\";\r\n          this.moveTop = moveSpeed - 50 + \"px\";\r\n          if (this.pullDistance >= 200) {\r\n            this.ifReload = \"释放刷新\";\r\n            // console.log(\"ok\");\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 点击屏幕\r\n    pullDownStart(e) {\r\n      this.moveTime = 0;\r\n    },\r\n    // 结束下拉（手指离开）\r\n    endMove() {\r\n      this.ifUp = true;\r\n      if (this.pullDistance < 200) {\r\n        this.contentMove = \"translate3d(0px, \" + 0 + \"px, 0px)\";\r\n        this.moveTop = -50 + \"px\";\r\n      } else {\r\n        this.contentMove = \"translate3d(0px, \" + 50 + \"px, 0px)\";\r\n        this.moveTop = 0 + \"px\";\r\n        this.ifReload = \"加载中\";\r\n        // ...调用接口获取数据，成功后 ↓\r\n        this.imgsArr = this.initImgsArr(0, 6);\r\n        this.ifReload = \"加载完成\";\r\n        setTimeout(() => {\r\n          this.contentMove = \"translate3d(0px, \" + 0 + \"px, 0px)\";\r\n          this.moveTop = -50 + \"px\";\r\n          console.log(\"完成刷新\");\r\n        }, 1000);\r\n      }\r\n    },\r\n    // 获取图片\r\n    initImgsArr(n, m) {\r\n      var arr = [];\r\n      for (var i = n; i < m; i++) {\r\n        //src为加载的图片的地址、link为超链接的链接地址\r\n        //info为自定义的图片展示信息，请根据自己的情况自行填写\r\n        arr.push({\r\n          src: require(`../../../public/f${i + 1}.jpg`),\r\n          link: \"\",\r\n          info: \"一些图片描述文字\"\r\n        });\r\n      }\r\n      return arr;\r\n    },\r\n    //获取新的图片数据的方法，用于页面滚动满足条件时调用\r\n    fetchImgsData() {\r\n      this.imgsArr = this.imgsArr.concat(this.fetchImgsArr);\r\n    }\r\n  },\r\n  created() {\r\n    //初始化第一次（即页面加载完毕时）要加载的图片数据\r\n    this.imgsArr = this.initImgsArr(0, 6);\r\n    // 模拟每次请求的下一批新的图片的数据\r\n    this.fetchImgsArr = this.initImgsArr(7, 13);\r\n  }\r\n};\r\n</script>"]}]}