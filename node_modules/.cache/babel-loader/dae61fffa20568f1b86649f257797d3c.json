{"remainingRequest":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\babel-loader\\lib\\index.js!E:\\三阶段代码\\Vue\\food\\VueFood\\src\\utilis\\axios.js","dependencies":[{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\src\\utilis\\axios.js","mtime":1583571371172},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\三阶段代码\\Vue\\food\\VueFood\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7IC8v5byV5YWlYXhpb3MKLy/or7fmsYLmi6bmiKrlmagg5Y+R6LW36K+35rGC5LmL5YmN5a+56K+35rGC5Y+C5pWw5YGa5LiA5rOi5aSE55CGCgpheGlvcy5pbnRlcmNlcHRvcnMucmVxdWVzdC51c2UoZnVuY3Rpb24gKGNvbmZpZykgewogIC8vIERvIHNvbWV0aGluZyBiZWZvcmUgcmVxdWVzdCBpcyBzZW50CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgLy8gRG8gc29tZXRoaW5nIHdpdGggcmVxdWVzdCBlcnJvcgogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOyAvL+WTjeW6lOaLpuaIquWZqO+8jOaOpeaUtuWIsOaVsOaNrueahOaXtuWAmeWvueaVsOaNrui/m+ihjOS4gOS6m+WkhOeQhgoKYXhpb3MuaW50ZXJjZXB0b3JzLnJlc3BvbnNlLnVzZShmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAvLyBjb25zb2xlLmxvZygi5ZON5bqUIik7CiAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7Cn0sIGZ1bmN0aW9uIChlcnJvcikgewogIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7Cn0pOwpleHBvcnQgZGVmYXVsdCBheGlvczs="},{"version":3,"sources":["E:/三阶段代码/Vue/food/VueFood/src/utilis/axios.js"],"names":["axios","interceptors","request","use","config","error","Promise","reject","response","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;AAC3B;;AACAA,KAAK,CAACC,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAASC,MAAT,EAAiB;AACb;AACA,SAAOA,MAAP;AACH,CAJL,EAKI,UAASC,KAAT,EAAgB;AACZ;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARL,E,CAUA;;AACAL,KAAK,CAACC,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CACI,UAASK,QAAT,EAAmB;AACf;AACA,SAAOA,QAAQ,CAACC,IAAhB;AACH,CAJL,EAKI,UAASJ,KAAT,EAAgB;AACZ,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPL;AASA,eAAeL,KAAf","sourcesContent":["import axios from \"axios\"; //引入axios\r\n//请求拦截器 发起请求之前对请求参数做一波处理\r\naxios.interceptors.request.use(\r\n    function(config) {\r\n        // Do something before request is sent\r\n        return config;\r\n    },\r\n    function(error) {\r\n        // Do something with request error\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n//响应拦截器，接收到数据的时候对数据进行一些处理\r\naxios.interceptors.response.use(\r\n    function(response) {\r\n        // console.log(\"响应\");\r\n        return response.data;\r\n    },\r\n    function(error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nexport default axios"]}]}